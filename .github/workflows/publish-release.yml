name: Publish Release

on:
  release:
    types: [prereleased, released]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Extract Tag Name
        uses: olegtarasov/get-tag@v2.1

      # Validate wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4

      # Set up Java environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      - name: Load secrets from 1Password
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          JETBRAINS_MARKETPLACE_PUBLISHING_TOKEN: op://ddev-intellij-plugin-secrets/JetBrains Marketplace Publishing Token/password
          JETBRAINS_MARKETPLACE_SIGNING_KEY: op://ddev-intellij-plugin-secrets/JetBrains Marketplace Signing Key/private key
          JETBRAINS_MARKETPLACE_SIGNING_KEY_CHAIN: op://ddev-intellij-plugin-secrets/JetBrains Marketplace Signing Key/add more/private key chain
          JETBRAINS_MARKETPLACE_SIGNING_KEY_PASSWORD: op://ddev-intellij-plugin-secrets/JetBrains Marketplace Signing Key/add more/private key password

      - name: Extract Channel from Version
        uses: actions-ecosystem/action-regex-match@v2
        id: match-channel
        with:
          text: ${{ github.ref }}
          regex: '(eap|beta|alpha).*$'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Publish to JetBrains Marketplace
        run: ./gradlew publishPlugin
        env:
          PUBLISH_CHANNEL: ${{ steps.match-channel.outputs.group1 }}

      - name: Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          files: build/distributions/*.zip

  sentry_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Tag Name
        uses: olegtarasov/get-tag@v2.1
        id: tagName

      - name: Load secrets from 1Password
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          SENTRY_AUTH_TOKEN: op://ddev-intellij-plugin-secrets/Sentry Token/credential
          SENTRY_ORG: op://ddev-intellij-plugin-secrets/Sentry Token/organization
          SENTRY_PROJECT: op://ddev-intellij-plugin-secrets/Sentry Token/project

      - name: Create Sentry release
        uses: getsentry/action-release@v3
        with:
          release: ${{ steps.tagName.outputs.tag }}
